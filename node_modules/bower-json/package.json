{
  "_args": [
    [
      {
        "raw": "bower-json@^0.8.1",
        "scope": null,
        "escapedName": "bower-json",
        "name": "bower-json",
        "rawSpec": "^0.8.1",
        "spec": ">=0.8.1 <0.9.0",
        "type": "range"
      },
      "C:\\Users\\maria\\OneDrive\\Área de Trabalho\\projeto angular web\\projeto-wed-organicador-de-tarefas\\node_modules\\grunt-bower-task"
    ]
  ],
  "_from": "bower-json@^0.8.1",
  "_hasShrinkwrap": false,
  "_id": "bower-json@0.8.4",
  "_location": "/bower-json",
  "_nodeVersion": "10.18.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/bower-json_0.8.4_1588003439608_0.47738435851730965"
  },
  "_npmUser": {
    "name": "sheerun",
    "email": "sheerun@sher.pl"
  },
  "_npmVersion": "6.13.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "bower-json@^0.8.1",
    "scope": null,
    "escapedName": "bower-json",
    "name": "bower-json",
    "rawSpec": "^0.8.1",
    "spec": ">=0.8.1 <0.9.0",
    "type": "range"
  },
  "_requiredBy": [
    "/grunt-bower-task"
  ],
  "_resolved": "https://registry.npmjs.org/bower-json/-/bower-json-0.8.4.tgz",
  "_shasum": "9c3b375870dcd9581350c1f403f6383dbf6a18b1",
  "_shrinkwrap": null,
  "_spec": "bower-json@^0.8.1",
  "_where": "C:\\Users\\maria\\OneDrive\\Área de Trabalho\\projeto angular web\\projeto-wed-organicador-de-tarefas\\node_modules\\grunt-bower-task",
  "author": {
    "name": "Twitter"
  },
  "dependencies": {
    "deep-extend": "^0.5.1",
    "ends-with": "^0.2.0",
    "ext-list": "^2.0.0",
    "graceful-fs": "^4.1.3",
    "intersect": "^1.0.1",
    "sort-keys-length": "^1.0.0"
  },
  "description": "Read bower.json files with semantics, normalisation, defaults and validation",
  "devDependencies": {
    "expect.js": "^0.3.1",
    "mocha": "^2.5.3",
    "request": "^2.64.0",
    "underscore.string": "^3.0.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-mMKghvq9ivbuzSsY5nrOLnDtZIJMUCpysqbGaGW3mj88JAcuSi8ZAzIt34vNZjohy0aR9VXLwgPTZGnBX2Vpjg==",
    "shasum": "9c3b375870dcd9581350c1f403f6383dbf6a18b1",
    "tarball": "https://registry.npmjs.org/bower-json/-/bower-json-0.8.4.tgz",
    "fileCount": 9,
    "unpackedSize": 16745,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJepwJwCRA9TVsSAnZWagAAt6EP/iLmROhMA7T6l+QrVz7k\nguW+epbKS007GM4UFm0HH9LaSJEbjdFBxcZPD3kPQ9w4qBZj5vBEownnc1AA\n2ORjkYu9dFNimfAyYRzJCT54Sc890rb1SKmaBDBYeEbBrXdLWkeNRRrI13Xv\nnEI4hW9U9c1Apz39KejJBZwGj+nvvtlSGGMjodlfa3lRHf+g3CxTCCrGtdGr\nTsbo9DPlII7LFKMo6aPCIHKnYA8+ObVJXinFs3sEcowfeNupu1SToiLvK91k\nxkHA+VtnVOlLTsA+nIyTYD33vCkzntiovAyxrznmuID7yxbBs/cbVuT1LRjs\nQH/BnNxqoRqxcbD4nm5j50u7Km+7uk0Nj2fxbtqUc02ywTqGDcW1/0rg9+bX\nmpf/pplL1H9/W9AoTzYC8isKbq37SN0moijG4seNXJXAi4oIgmgwv1zb19ng\n4DTHli/TPpckd22driRW4/lPf3DchvFat0pTelmJC2AtKibnuF5dYXWV5+2i\n2wQ111mGacWQm9bhEDhpjR5VZ4RUYgUix7WEGHWRbORM4B8cvtaJZNr/32xs\n1El3PLwHMVDZ3/iN+SJgA2YECrvVw7FK6XvTEAm6HgBSIH2fv5EV1AIY9bS7\nlV3sLII0aLF/opVQwwRRk4O8JNQ2T1B/7WgOQJPFUnBYPKWiydmvKr+2pqtL\nyBZx\r\n=s8nQ\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "lib"
  ],
  "license": "MIT",
  "main": "lib/json",
  "maintainers": [
    {
      "name": "desandro",
      "email": "desandrocodes@gmail.com"
    },
    {
      "name": "paulirish",
      "email": "paul.irish@gmail.com"
    },
    {
      "name": "satazor",
      "email": "andremiguelcruz@msn.com"
    },
    {
      "name": "sheerun",
      "email": "sheerun@sher.pl"
    },
    {
      "name": "sindresorhus",
      "email": "sindresorhus@gmail.com"
    },
    {
      "name": "wibblymat",
      "email": "mat@wibbly.org.uk"
    }
  ],
  "name": "bower-json",
  "optionalDependencies": {},
  "readme": "# bower-json\n\nRead `bower.json` files with semantics, normalisation, defaults and validation.\n\nInstall via [npm](https://www.npmjs.org/package/bower-json): `npm install --save bower-json`\n\n## Usage\n\n#### .read(file, options, callback)\n#### .readSync(file, options)\n\nReads `file` and applies normalisation, defaults and validation according to the `bower.json` spec.\nIf the passed `file` does not exist, the callback is called with `error.code` equal to `ENOENT`.\nIf the passed `file` contents are not valid JSON, the callback is called with `error.code` equal to `EMALFORMED`.\nIf the `json` does not comply with the `bower.json` spec, the callback is called with `error.code` equal to `EINVALID`.\n\nIf `file` is a directory, `find()` will be used to search for the json file.\nThe `options` argument is optional and can be omitted. These options will be passed to `parse` method.\n\n\n```js\nvar bowerJson = require('bower-json');\n\n// Can also be used by simply calling bowerJson()\nbowerJson.read('/path/to/bower.json', function (err, json) {\n    if (err) {\n        console.error('There was an error reading the file');\n        console.error(err.message);\n        return;\n    }\n\n    console.log('JSON: ', json);\n});\n```\n\n\n#### .parse(json, options)\n\nParses an object. Useful when you want to apply normalisation and validation directly to an object.\nIf the `json` does not comply with the `bower.json` spec, an error is thrown with `error.code` equal to `EINVALID`.\n\nThe `options` arguments is optional and can be omitted. Available options:\n\n- validate: Apply validation, defaults to `true`\n- normalize: Apply normalisation, defaults to `false`\n- clone: clone, use and return the passed in `json` object instead of using it directly, defaults to `false`\n\n\n```js\nvar bowerJson = require('bower-json');\n\nvar json = {\n    name: 'my-package',\n    version: '0.0.1'\n};\n\ntry {\n    bowerJson.parse(json);\n} catch (err) {\n    console.error('There was an error parsing the object');\n    console.error(err.message);\n}\n```\n\n#### .getIssues(json) - DEPRECATED\n\nValidates the passed `json` object.\n\nReturns an object with errors and warnings of this bower.json contents.\n\n```js\nvar bowerJson = require('bower-json');\n\nvar json = {\n    name: 'myPackage',\n    version: '0.0.1',\n    main: {}\n};\n\nvar issues = bowerJson.getIssues(json);\n\nexpect(issues).toEqual({\n  errors: ['The \"main\" field has to be either an Array or a String'],\n  warnings: ['The \"name\" must be lowercase']\n});\n\n#### .validate(json)\n\nValidates the passed `json` object.\n\nThrows an error with `error.code` equal to `EINVALID` if it does not comply with the spec.\n\n```js\nvar bowerJson = require('bower-json');\n\nvar json = {\n    name: 'myPackage',\n    version: '0.0.1'\n};\n\ntry {\n    bowerJson.validate(json);\n} catch (err) {\n    console.error('There was an error validating the object');\n    console.error(err.message);\n}\n```\n\n#### .normalize(json)\n\n```js\nvar bowerJson = require('bower-json');\n\nvar json = {\n    name: 'my-package',\n    version: '0.0.1',\n    main: 'foo.js,bar.js'\n};\n\nbowerJson.normalize(json);\njson.main // ['foo.js', 'bar.js']\n```\n\n\n#### .find(folder, callback)\n#### .findSync(folder)\n\nFinds the `json` filename inside a folder.\nChecks if a `bower.json` exists, falling back to `component.json` (deprecated) and `.bower.json`.\nIf no file was found, the callback is called with a `error.code` of `ENOENT`.\n\n```js\nvar bowerJson = require('bower-json');\n\nbowerJson.find('/path/to/folder', function (err, filename) {\n    if (err) {\n        console.error('There is no json file in the folder');\n        return;\n    }\n\n    console.log('Filename: ', filename);\n\n    // Now that we got the filename, we can read its contents\n    bowerJson.read(filename, function (err, json) {\n        if (err) {\n            console.error('There was an error reading the file');\n            console.error(err.message);\n            return;\n        }\n\n        console.log('JSON: ', json);\n    });\n});\n```\n\n\n## License\n\nReleased under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "https://github.com/bower/bower/tree/master/packages/bower-json"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "0.8.4"
}
