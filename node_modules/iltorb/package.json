{
  "_args": [
    [
      {
        "raw": "iltorb@^2.4.3",
        "scope": null,
        "escapedName": "iltorb",
        "name": "iltorb",
        "rawSpec": "^2.4.3",
        "spec": ">=2.4.3 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\maria\\OneDrive\\Área de Trabalho\\projeto angular web\\projeto-wed-organicador-de-tarefas\\node_modules\\grunt-contrib-compress"
    ]
  ],
  "_from": "iltorb@^2.4.3",
  "_hasShrinkwrap": false,
  "_id": "iltorb@2.4.5",
  "_location": "/iltorb",
  "_nodeVersion": "13.7.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/iltorb_2.4.5_1580573446923_0.025822110972665957"
  },
  "_npmUser": {
    "name": "mayhem",
    "email": "stepien.nicolas@gmail.com"
  },
  "_npmVersion": "6.13.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "iltorb@^2.4.3",
    "scope": null,
    "escapedName": "iltorb",
    "name": "iltorb",
    "rawSpec": "^2.4.3",
    "spec": ">=2.4.3 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/grunt-contrib-compress"
  ],
  "_resolved": "https://registry.npmjs.org/iltorb/-/iltorb-2.4.5.tgz",
  "_shasum": "d64434b527099125c6839ed48b666247a172ef87",
  "_shrinkwrap": null,
  "_spec": "iltorb@^2.4.3",
  "_where": "C:\\Users\\maria\\OneDrive\\Área de Trabalho\\projeto angular web\\projeto-wed-organicador-de-tarefas\\node_modules\\grunt-contrib-compress",
  "binary": {
    "module_name": "iltorb",
    "module_path": "./build/bindings",
    "remote_path": "v{version}",
    "host": "https://github.com/nstepien/iltorb/releases/download/"
  },
  "bugs": {
    "url": "https://github.com/nstepien/iltorb/issues"
  },
  "contributors": [
    {
      "name": "Nicolas Stepien",
      "email": "stepien.nicolas@gmail.com"
    },
    {
      "name": "Hung Tran",
      "email": "oohnoitz@gmail.com"
    }
  ],
  "dependencies": {
    "detect-libc": "^1.0.3",
    "nan": "^2.14.0",
    "npmlog": "^4.1.2",
    "prebuild-install": "^5.3.3",
    "which-pm-runs": "^1.0.0"
  },
  "deprecated": "The zlib module provides APIs for brotli compression/decompression starting with Node.js v10.16.0, please use it over iltorb",
  "description": "Brotli compression/decompression with native bindings",
  "devDependencies": {
    "ava": "^2.4.0",
    "cross-env": "^7.0.0",
    "cross-spawn": "^7.0.1",
    "node-abi": "^2.13.0",
    "node-gyp": "^6.1.0",
    "npm-run-path-compat": "^2.0.3",
    "prebuild": "^10.0.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-EMCMl3LnnNSZJS5QrxyZmMTaAC4+TJkM5woD+xbpm9RB+mFYCr7C05GFE3TEGCsVQSVHmjX+3sf5AiwsylNInQ==",
    "shasum": "d64434b527099125c6839ed48b666247a172ef87",
    "tarball": "https://registry.npmjs.org/iltorb/-/iltorb-2.4.5.tgz",
    "fileCount": 105,
    "unpackedSize": 2025541,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeNaMHCRA9TVsSAnZWagAAxXQP/3uLpG5yX0haNWHutQW0\nHE97UjLUp8QhZGPO8qzPMe1X93Q8WUr9UjMt4Mj9Sf8+UmaAHn6EdCtNASnI\n/Wesls6uwpgUR83vFJX6T3yiQe0nfHT+C5rcUgHCmXbetA4EzTOmU14Ks/EB\n2cla6xz46ezAQ7gKXmTrt+Vtf0T1mG9r6Il6oM1aTZbwABr4bIpubVe3iPOZ\niJLxTyylmBs/c/XDLNUTenpw49zR8DMQzRWEHkft7zxRsRFwRmohWZTgbc3Y\nNY3Za03i6/v19o8Of+bOrK6V0sTjoOYbcLeAXeuXM4kXYUfCbGnODyHV8ju2\nrW0v7/ho/HRHA4K36PL1P+0vvzUPWFPx7rOUdCvTiyG1IkJP6i1GTwUKdfl5\na2Od8Rm6wnvTS7O0yAuhekSmov6ykwnXGwU7aOtI/aoDxjDoGhW/U+oZiKOS\n1RGB3cm+E2z/vjz5ZTFCyJLZOyV9qa4YBJdTx0ind/o8DiIDQv6dH0xMqDh4\nqMqydHui9d0FEJZHCUqNAexI7OCQePXHNEgK01ROzkDw+EWrungo3enwdAk5\nmrF4WA2sX4CkrpnYO1GLDeXwPmUXTsj1wBS45fijh5u6199lhdv9jcDU53CW\nhaMECTIHRigaaoNVa727dmuNtZ8yNINyYHRv1LyEnx3yEfVqqDVhzLyOb4D/\nDEs9\r\n=zrqD\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "brotli/c/common",
    "brotli/c/dec",
    "brotli/c/enc",
    "brotli/c/include",
    "scripts",
    "src",
    "binding.gyp",
    "index.js"
  ],
  "gitHead": "01907feaf696e630cf79eba85a61b186bf3c65b6",
  "homepage": "https://github.com/nstepien/iltorb",
  "keywords": [
    "brotli",
    "compression",
    "decompression"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mayhem",
      "email": "stepien.nicolas@gmail.com"
    },
    {
      "name": "oohnoitz",
      "email": "oohnoitz@gmail.com"
    }
  ],
  "name": "iltorb",
  "optionalDependencies": {},
  "readme": "# iltorb\r\n\r\n[![NPM Version][npm-badge]][npm-url]\r\n[![Travis Build Status][travis-badge]][travis-url]\r\n[![AppVeyor Build Status][appveyor-badge]][appveyor-url]\r\n[![CircleCI Build Status][circleci-badge]][circleci-url]\r\n\r\n[iltorb](https://www.npmjs.com/package/iltorb) is a [Node.js](https://nodejs.org) package offering native bindings for the [brotli](https://github.com/google/brotli) compression library.\r\n\r\n## Install\r\n\r\nThis module uses `prebuild` to download a pre-compiled binary for your platform, if it exists. Otherwise, it will use `node-gyp` to build the module.\r\n\r\n```\r\nnpm install iltorb\r\n```\r\n\r\n### Prerequisites for Building\r\n\r\nThe following is required to build from source or when a [pre-compiled binary](https://github.com/nstepien/iltorb/releases) does not exist.\r\n\r\n- Python 2.7\r\n- GCC 4.8+ (Unix) or [windows-build-tools](https://github.com/felixrieseberg/windows-build-tools) (Windows), see [Node Building tools](https://github.com/nodejs/node-gyp#installation).\r\n\r\n## Methods\r\n\r\n### Async\r\n\r\nOmitting the callback argument will result in the compress and decompress methods to return a Promise.\r\n\r\n#### compress(buffer[, brotliEncodeParams][, callback])\r\n\r\n```javascript\r\nconst compress = require('iltorb').compress;\r\n\r\n// callback style\r\ncompress(input, function(err, output) {\r\n  // ...\r\n});\r\n\r\n// promise style\r\ncompress(input)\r\n  .then(output => /* ... */)\r\n  .catch(err => /* ... */);\r\n\r\n// async/await style\r\ntry {\r\n  const output = await compress(input);\r\n} catch(err) {\r\n  // ...\r\n}\r\n```\r\n\r\n#### decompress(buffer[, callback])\r\n\r\n```javascript\r\nconst decompress = require('iltorb').decompress;\r\n\r\n// callback style\r\ndecompress(input, function(err, output) {\r\n  // ...\r\n});\r\n\r\n// promise style\r\ndecompress(input)\r\n  .then(output => /* ... */)\r\n  .catch(err => /* ... */);\r\n\r\n// async/await style\r\ntry {\r\n  const output = await decompress(input);\r\n} catch(err) {\r\n  // ...\r\n}\r\n```\r\n\r\n### Sync\r\n\r\n#### compressSync(buffer[, brotliEncodeParams])\r\n\r\n```javascript\r\nconst compressSync = require('iltorb').compressSync;\r\n\r\ntry {\r\n  var output = compressSync(input);\r\n} catch(err) {\r\n  // ...\r\n}\r\n```\r\n\r\n#### decompressSync(buffer)\r\n\r\n```javascript\r\nconst decompressSync = require('iltorb').decompressSync;\r\n\r\ntry {\r\n  var output = decompressSync(input);\r\n} catch(err) {\r\n  // ...\r\n}\r\n```\r\n\r\n### Stream\r\n\r\n#### compressStream([brotliEncodeParams])\r\n\r\n```javascript\r\nconst compressStream = require('iltorb').compressStream;\r\nconst fs = require('fs');\r\n\r\nfs.createReadStream('path/to/input')\r\n  .pipe(compressStream())\r\n  .pipe(fs.createWriteStream('path/to/output'));\r\n```\r\n\r\n##### compressionStream.flush()\r\n\r\nCall this method to flush pending data. Don't call this frivolously, premature flushes negatively impact the effectiveness of the compression algorithm.\r\n\r\n#### decompressStream()\r\n\r\n```javascript\r\nconst decompressStream = require('iltorb').decompressStream;\r\nconst fs = require('fs');\r\n\r\nfs.createReadStream('path/to/input')\r\n  .pipe(decompressStream())\r\n  .pipe(fs.createWriteStream('path/to/output'));\r\n```\r\n\r\n### brotliEncodeParams\r\n\r\nThe `compress`, `compressSync` and `compressStream` methods may accept an optional `brotliEncodeParams` object to define some or all of brotli's compression parameters:\r\n- [type definition](https://github.com/google/brotli/blob/v1.0.4/c/enc/params.h#L30-L42)\r\n- [defaults](https://github.com/google/brotli/blob/v1.0.4/c/enc/encode.c#L706-L720)\r\n- [explanations](https://github.com/google/brotli/blob/v1.0.4/c/include/brotli/encode.h#L133-L205)\r\n\r\n```javascript\r\nconst brotliEncodeParams = {\r\n  mode: 0,\r\n  quality: 11,\r\n  lgwin: 22,\r\n  lgblock: 0,\r\n  disable_literal_context_modeling: false,\r\n  size_hint: 0, // automatically set for `compress` and `compressSync`\r\n  large_window: false,\r\n  npostfix: 0,\r\n  ndirect: 0\r\n};\r\n```\r\n\r\n## Troubleshooting\r\n\r\n1. I am unable to install `iltorb` because the host (GitHub) that serves the binaries is blocked by my firewall.\r\n\r\n    a) By **default**, if the binaries could not be downloaded for any reason, the install script will attempt to compile the binaries locally on your machine. This requires having all of the build requirements fulfilled.\r\n\r\n    b) You can override the `binary.host` value found in `package.json` with the following methods:\r\n\r\n      - using the following ENV variable `npm_config_iltorb_binary_host=https://domain.tld/path`\r\n      - as an additional argument with npm install `--iltorb_binary_host=https://domain.tld/path`\r\n\r\n      Note: Both of these would result in downloading the binary from `https://domain.tld/path/vX.X.X/iltorb-vX.X.X-node-vXX-arch.tar.gz`\r\n\r\n\r\n[npm-badge]: https://img.shields.io/npm/v/iltorb.svg\r\n[npm-url]: https://www.npmjs.com/package/iltorb\r\n[travis-badge]: https://img.shields.io/travis/nstepien/iltorb.svg\r\n[travis-url]: https://travis-ci.org/nstepien/iltorb\r\n[appveyor-badge]: https://ci.appveyor.com/api/projects/status/5x96vn5561bixics/branch/master?svg=true\r\n[appveyor-url]: https://ci.appveyor.com/project/MayhemYDG/iltorb\r\n[circleci-badge]: https://circleci.com/gh/nstepien/iltorb/tree/master.svg?style=shield\r\n[circleci-url]: https://circleci.com/gh/nstepien/iltorb/tree/master\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/nstepien/iltorb.git"
  },
  "scripts": {
    "install": "node ./scripts/install.js || node-gyp rebuild",
    "prebuild": "detect-libc prebuild",
    "prebuild-ci": "node ./scripts/build.js",
    "prebuild-upload": "cross-env PUBLISH_BINARY=1 npm run prebuild-ci",
    "rebuild": "prebuild --compile",
    "test": "ava"
  },
  "version": "2.4.5"
}
