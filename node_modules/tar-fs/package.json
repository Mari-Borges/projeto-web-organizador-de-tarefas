{
  "_args": [
    [
      {
        "raw": "tar-fs@^2.0.0",
        "scope": null,
        "escapedName": "tar-fs",
        "name": "tar-fs",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\maria\\OneDrive\\Área de Trabalho\\projeto angular web\\projeto-wed-organicador-de-tarefas\\node_modules\\prebuild-install"
    ]
  ],
  "_from": "tar-fs@^2.0.0",
  "_hasShrinkwrap": false,
  "_id": "tar-fs@2.1.0",
  "_location": "/tar-fs",
  "_nodeVersion": "12.16.3",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/tar-fs_2.1.0_1589227439758_0.9789647586680021"
  },
  "_npmUser": {
    "name": "mafintosh",
    "email": "mathiasbuus@gmail.com"
  },
  "_npmVersion": "6.14.4",
  "_phantomChildren": {
    "buffer": "5.6.0",
    "end-of-stream": "1.4.4",
    "fs-constants": "1.0.0",
    "inherits": "2.0.4",
    "string_decoder": "1.1.1",
    "util-deprecate": "1.0.2"
  },
  "_requested": {
    "raw": "tar-fs@^2.0.0",
    "scope": null,
    "escapedName": "tar-fs",
    "name": "tar-fs",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/prebuild-install"
  ],
  "_resolved": "https://registry.npmjs.org/tar-fs/-/tar-fs-2.1.0.tgz",
  "_shasum": "d1cdd121ab465ee0eb9ccde2d35049d3f3daf0d5",
  "_shrinkwrap": null,
  "_spec": "tar-fs@^2.0.0",
  "_where": "C:\\Users\\maria\\OneDrive\\Área de Trabalho\\projeto angular web\\projeto-wed-organicador-de-tarefas\\node_modules\\prebuild-install",
  "author": {
    "name": "Mathias Buus"
  },
  "bugs": {
    "url": "https://github.com/mafintosh/tar-fs/issues"
  },
  "dependencies": {
    "chownr": "^1.1.1",
    "mkdirp-classic": "^0.5.2",
    "pump": "^3.0.0",
    "tar-stream": "^2.0.0"
  },
  "description": "filesystem bindings for tar-stream",
  "devDependencies": {
    "rimraf": "^2.6.3",
    "standard": "^12.0.1",
    "tape": "^4.9.2"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "integrity": "sha512-9uW5iDvrIMCVpvasdFHW0wJPez0K4JnMZtsuIeDI7HyMGJNxmDZDOCQROr7lXyS+iL/QMpj07qcjGYTSdRFXUg==",
    "shasum": "d1cdd121ab465ee0eb9ccde2d35049d3f3daf0d5",
    "tarball": "https://registry.npmjs.org/tar-fs/-/tar-fs-2.1.0.tgz",
    "fileCount": 16,
    "unpackedSize": 27799,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeua+wCRA9TVsSAnZWagAAny8QAIYxWq8kFKvKywnqH7Ay\n1S7XhqGB1TIwCwAscgaB0RiSydpa8QtCRfXQoIAbDtMhSyi59yWd7soRZSkc\n5EGGAvHNi3tPsGlj2r67cDmEDBBf2s49DP4ou9nic70kZu0cf353PRAFUcOm\njviQjFnsRbXxx/87IBV8w8z0Q98sKU3AHGVGPSSBgvNmU52bN68PP3LGlbzN\nKhSB23HRwhp2q7jx5BplM7UDyMEEXt8c4wvrifW4cn95WorS08WjslJfojOj\nTqEv+j/UQgCRhUVH41lJ2loqYMK65CC0+RZ/Co1IVs7T0zE7M4Z9j9tZ2dUB\nuF1m6AWy7vrksrlorgQELH3wsolU2ZjXn5S+i0jieWSkM6ZLU44KSZm9ymho\nkRb34F1zzgwdTfh3itFT8Bni8F4V2f3L4DUuN2BcvwYWj06uUrIWspE0Fsep\nF9uMe2HzOHHLm7fJu5ilMuZqX/2+GALOZ70l40KoDXKS2IJWvD9TMYctwhsB\n+p4V17PrFCl/cwjPpiaZg2i07FK/vwMXxO+139nm6tHlcLdTfw7lItbvCa8K\nMtDRY4EGXPdlncPIGJ1FYHT8Z8zAqCxlVwLxxvTqZ9gC33AAG6N5lFFuEVY9\n7hpzrcLrf1b4htT1b4tNF3I4Gkyjto0sl76ee8Ns2OwWXuZqV3DptCf3fava\nUD2k\r\n=wUx8\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "33971c272f06958473b52841294fe1528363bc12",
  "homepage": "https://github.com/mafintosh/tar-fs",
  "keywords": [
    "tar",
    "fs",
    "file",
    "tarball",
    "directory",
    "stream"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mafintosh",
      "email": "mathiasbuus@gmail.com"
    },
    {
      "name": "maxogden",
      "email": "max@maxogden.com"
    }
  ],
  "name": "tar-fs",
  "optionalDependencies": {},
  "readme": "# tar-fs\n\nfilesystem bindings for [tar-stream](https://github.com/mafintosh/tar-stream).\n\n```\nnpm install tar-fs\n```\n\n[![build status](https://secure.travis-ci.org/mafintosh/tar-fs.png)](http://travis-ci.org/mafintosh/tar-fs)\n\n## Usage\n\ntar-fs allows you to pack directories into tarballs and extract tarballs into directories.\n\nIt doesn't gunzip for you, so if you want to extract a `.tar.gz` with this you'll need to use something like [gunzip-maybe](https://github.com/mafintosh/gunzip-maybe) in addition to this.\n\n``` js\nvar tar = require('tar-fs')\nvar fs = require('fs')\n\n// packing a directory\ntar.pack('./my-directory').pipe(fs.createWriteStream('my-tarball.tar'))\n\n// extracting a directory\nfs.createReadStream('my-other-tarball.tar').pipe(tar.extract('./my-other-directory'))\n```\n\nTo ignore various files when packing or extracting add a ignore function to the options. `ignore`\nis also an alias for `filter`. Additionally you get `header` if you use ignore while extracting.\nThat way you could also filter by metadata.\n\n``` js\nvar pack = tar.pack('./my-directory', {\n  ignore: function(name) {\n    return path.extname(name) === '.bin' // ignore .bin files when packing\n  }\n})\n\nvar extract = tar.extract('./my-other-directory', {\n  ignore: function(name) {\n    return path.extname(name) === '.bin' // ignore .bin files inside the tarball when extracing\n  }\n})\n\nvar extractFilesDirs = tar.extract('./my-other-other-directory', {\n  ignore: function(_, header) {\n    // pass files & directories, ignore e.g. symlinks\n    return header.type !== 'file' && header.type !== 'directory'\n  }\n})\n```\n\nYou can also specify which entries to pack using the `entries` option\n\n```js\nvar pack = tar.pack('./my-directory', {\n  entries: ['file1', 'subdir/file2'] // only the specific entries will be packed\n})\n```\n\nIf you want to modify the headers when packing/extracting add a map function to the options\n\n``` js\nvar pack = tar.pack('./my-directory', {\n  map: function(header) {\n    header.name = 'prefixed/'+header.name\n    return header\n  }\n})\n\nvar extract = tar.extract('./my-directory', {\n  map: function(header) {\n    header.name = 'another-prefix/'+header.name\n    return header\n  }\n})\n```\n\nSimilarly you can use `mapStream` incase you wanna modify the input/output file streams\n\n``` js\nvar pack = tar.pack('./my-directory', {\n  mapStream: function(fileStream, header) {\n    if (path.extname(header.name) === '.js') {\n      return fileStream.pipe(someTransform)\n    }\n    return fileStream;\n  }\n})\n\nvar extract = tar.extract('./my-directory', {\n  mapStream: function(fileStream, header) {\n    if (path.extname(header.name) === '.js') {\n      return fileStream.pipe(someTransform)\n    }\n    return fileStream;\n  }\n})\n```\n\nSet `options.fmode` and `options.dmode` to ensure that files/directories extracted have the corresponding modes\n\n``` js\nvar extract = tar.extract('./my-directory', {\n  dmode: parseInt(555, 8), // all dirs should be readable\n  fmode: parseInt(444, 8) // all files should be readable\n})\n```\n\nIt can be useful to use `dmode` and `fmode` if you are packing/unpacking tarballs between *nix/windows to ensure that all files/directories unpacked are readable.\n\nAlternatively you can set `options.readable` and/or `options.writable` to set the dmode and fmode to readable/writable.\n\n``` js\nvar extract = tar.extract('./my-directory', {\n  readable: true, // all dirs and files should be readable\n  writable: true, // all dirs and files should be writable\n})\n```\n\nSet `options.strict` to `false` if you want to ignore errors due to unsupported entry types (like device files)\n\nTo dereference symlinks (pack the contents of the symlink instead of the link itself) set `options.dereference` to `true`.\n\n## Copy a directory\n\nCopying a directory with permissions and mtime intact is as simple as\n\n``` js\ntar.pack('source-directory').pipe(tar.extract('dest-directory'))\n```\n\n## Interaction with [`tar-stream`](https://github.com/mafintosh/tar-stream)\n\nUse `finalize: false` and the `finish` hook to\nleave the pack stream open for further entries (see\n[`tar-stream#pack`](https://github.com/mafintosh/tar-stream#packing)),\nand use `pack` to pass an existing pack stream.\n\n``` js\nvar mypack = tar.pack('./my-directory', {\n  finalize: false,\n  finish: function(sameAsMypack) {\n    mypack.entry({name: 'generated-file.txt'}, \"hello\")\n    tar.pack('./other-directory', {\n      pack: sameAsMypack\n    })\n  }\n})\n```\n\n\n## Performance\n\nPacking and extracting a 6.1 GB with 2496 directories and 2398 files yields the following results on my Macbook Air.\n[See the benchmark here](https://gist.github.com/mafintosh/8102201)\n\n* tar-fs: 34.261 seconds\n* [node-tar](https://github.com/isaacs/node-tar): 366.123 seconds (or 10x slower)\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mafintosh/tar-fs.git"
  },
  "scripts": {
    "test": "standard && tape test/index.js"
  },
  "version": "2.1.0"
}
