{
  "_args": [
    [
      {
        "raw": "portscanner@^2.2.0",
        "scope": null,
        "escapedName": "portscanner",
        "name": "portscanner",
        "rawSpec": "^2.2.0",
        "spec": ">=2.2.0 <3.0.0",
        "type": "range"
      },
      "C:\\Users\\maria\\OneDrive\\Área de Trabalho\\projeto angular web\\projeto-wed-organicador-de-tarefas\\node_modules\\grunt-contrib-connect"
    ]
  ],
  "_from": "portscanner@^2.2.0",
  "_hasShrinkwrap": false,
  "_id": "portscanner@2.2.0",
  "_location": "/portscanner",
  "_nodeVersion": "10.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/portscanner_2.2.0_1526277347094_0.4116538007015289"
  },
  "_npmUser": {
    "name": "laggingreflex",
    "email": "laggingreflex@gmail.com"
  },
  "_npmVersion": "6.0.0",
  "_phantomChildren": {
    "lodash": "4.17.15"
  },
  "_requested": {
    "raw": "portscanner@^2.2.0",
    "scope": null,
    "escapedName": "portscanner",
    "name": "portscanner",
    "rawSpec": "^2.2.0",
    "spec": ">=2.2.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/grunt-contrib-connect"
  ],
  "_resolved": "https://registry.npmjs.org/portscanner/-/portscanner-2.2.0.tgz",
  "_shasum": "6059189b3efa0965c9d96a56b958eb9508411cf1",
  "_shrinkwrap": null,
  "_spec": "portscanner@^2.2.0",
  "_where": "C:\\Users\\maria\\OneDrive\\Área de Trabalho\\projeto angular web\\projeto-wed-organicador-de-tarefas\\node_modules\\grunt-contrib-connect",
  "author": "",
  "bugs": {
    "url": "https://github.com/baalexander/node-portscanner/issues"
  },
  "dependencies": {
    "async": "^2.6.0",
    "is-number-like": "^1.0.3"
  },
  "description": "Asynchronous port scanner for Node.js",
  "devDependencies": {
    "ava": "^0.4.2",
    "eslint": "^3.10.2",
    "eslint-config-standard": "^6.2.1",
    "nyc": "^11.3.0",
    "standard": "^8.5.0"
  },
  "directories": {
    "lib": "./lib"
  },
  "dist": {
    "integrity": "sha512-IFroCz/59Lqa2uBvzK3bKDbDDIEaAY8XJ1jFxcLWTqosrsc32//P4VuSB2vZXoHiHqOmx8B5L5hnKOxL/7FlPw==",
    "shasum": "6059189b3efa0965c9d96a56b958eb9508411cf1",
    "tarball": "https://registry.npmjs.org/portscanner/-/portscanner-2.2.0.tgz",
    "fileCount": 7,
    "unpackedSize": 23061,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJa+STjCRA9TVsSAnZWagAAYYUP/298kB3tZ/OqIL811QZJ\nAW1aF54+1M+TNEdzMc7iyoM64wZIcxprt5150sKSCv/1FAnsF9VLZVhpqpaK\ncUdnZZiZfPFtUJuzjxJxBN1EQUpC/g5vPJIx1XvHkhUJN9l12Hb/lEJpcdDx\nBxMZmjO3T0hhaEqjEdPvgfufnL/r3eAHzU9vUBcDWOpMhKkDn3plhZEWzY22\nalbUSEPPnu4aXFJe44DLFegS20O16mlv2xpTa5PaWNWcBmuv9jqtXe1WQYgj\nmNE71W5d2IgtxZ0g3thx5MGH8KhrBCdgYpXE5BKw5wlRCvqCBzO0ge10HVUu\njUcWQuNPg1OQX81m+jWKjRdSdacUYaUv4+tJUiBj3MU3QRJmiRKQtsjnSQEE\nEWxPYwdY9DXG43ANSpQ38qV2CwU2NaLtvL1dqd5Aj3cCVUdgiJDI41OIJifM\nw3cW6KmhY6vFqzfkxec+nxDRonq0Z5kyeUSLrZcHiMf5/A9sUHG3RSIlw7H+\n5NBaRmVUlgHXiRiaAfcwP2GyhFnSv6Y/74LGIVDOEcPvYl7E/S8zU845l0CZ\nclf8Yakc88zvLXz6fxVUosB0Qh2MSNNLVtPDwWHQd3gTQeMs3lkhW0uq6h60\n1EbzpievjD+M/Mjia9D/he1Op01LRmgEXx64n7lf9NsffMGrjaru0Z1S+SJW\neiUf\r\n=GKxz\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=0.4",
    "npm": ">=1.0.0"
  },
  "gitHead": "692d7c9b9b9e68cadc9b72ac49d66d00e769e7e0",
  "homepage": "https://github.com/baalexander/node-portscanner",
  "keywords": [
    "portscanner",
    "port",
    "scanner",
    "checker",
    "status"
  ],
  "license": "MIT",
  "main": "./lib/portscanner.js",
  "maintainers": [
    {
      "name": "baalexander",
      "email": "baalexander@gmail.com"
    },
    {
      "name": "laggingreflex",
      "email": "laggingreflex@gmail.com"
    },
    {
      "name": "shinnn",
      "email": "snnskwtnb@gmail.com"
    },
    {
      "name": "smassa",
      "email": "endangeredmassa@gmail.com"
    }
  ],
  "name": "portscanner",
  "optionalDependencies": {},
  "preferGlobal": false,
  "readme": "# portscanner\n\n[![npm](https://img.shields.io/npm/v/portscanner.svg)](https://www.npmjs.com/package/portscanner)\n[![JavaScript Style Guide](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n\nThe portscanner module is\nan asynchronous JavaScript port scanner for Node.js.\n\nPortscanner can check a port,\nor range of ports,\nfor 'open' or 'closed' statuses.\n\n[Looking for maintainer](https://github.com/baalexander/node-portscanner/issues/25)!\n\n## Install\n\n```bash\nnpm install portscanner\n```\n\n## Usage\n\nA brief example:\n\n```javascript\nvar portscanner = require('portscanner')\n\n// Checks the status of a single port\nportscanner.checkPortStatus(3000, '127.0.0.1', function(error, status) {\n  // Status is 'open' if currently in use or 'closed' if available\n  console.log(status)\n})\n\n// Find the first available port. Asynchronously checks, so first port\n// determined as available is returned.\nportscanner.findAPortNotInUse(3000, 3010, '127.0.0.1', function(error, port) {\n  console.log('AVAILABLE PORT AT: ' + port)\n})\n\n// Find the first port in use or blocked. Asynchronously checks, so first port\n// to respond is returned.\nportscanner.findAPortInUse(3000, 3010, '127.0.0.1', function(error, port) {\n  console.log('PORT IN USE AT: ' + port)\n})\n\n// You can also pass array of ports to check\nportscanner.findAPortInUse([3000, 3005, 3006], '127.0.0.1', function(error, port) {\n  console.log('PORT IN USE AT: ' + port)\n})\n\n// And skip host param. Default is '127.0.0.1'\nportscanner.findAPortNotInUse(3000, 4000, function(error, port) {\n  console.log('PORT IN USE AT: ' + port)\n})\n\n// And use promises\nportscanner.findAPortNotInUse(3000, 4000).then(function(port) {\n  console.log('PORT IN USE AT: ' + port)\n})\n```\n\nThe example directory contains a more detailed example.\n\n## Test\n\n```sh\nnpm test\n```\n\n## Future\n\nPlease create issues or pull requests\nfor port scanning related features\nyou'd like to see included.\n\n## License (MIT)\n\n[MIT](LICENSE)\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/baalexander/node-portscanner.git"
  },
  "scripts": {
    "coverage": "nyc npm run test",
    "lint": "standard",
    "test": "ava"
  },
  "version": "2.2.0"
}
